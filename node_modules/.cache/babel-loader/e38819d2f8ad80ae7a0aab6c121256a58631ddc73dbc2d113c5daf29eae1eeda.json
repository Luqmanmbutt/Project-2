{"ast":null,"code":"var _jsxFileName = \"/Users/sirllokalot/Desktop/Homework and Classwork/Project-2/poke-dex/src/components/WaterPokemon.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WaterPokemon = () => {\n  _s();\n  let pokemon = 'Squirtle';\n  const [data, setData] = useState(null);\n  const [evolution, setEvolution] = useState('water-pokemon-img-1');\n  const getData = async () => {\n    const response = await axios.get(`https://pokeapi.glitch.me/v1/pokemon/${pokemon}`);\n    setData(response);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const splice = () => {\n    data === null || data === void 0 ? void 0 : data.data.splice(1);\n  };\n  const evoOne = () => {\n    pokemon = 'squirtle';\n    getData();\n    setEvolution('water-pokemon-img-1');\n  };\n  const evoTwo = () => {\n    pokemon = 'wartortle';\n    getData();\n    setEvolution('water-pokemon-img-2');\n  };\n  const evoThree = () => {\n    pokemon = 'blastoise';\n    getData();\n    setEvolution('water-pokemon-img-3');\n  };\n  splice();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-image2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokeball\",\n            onClick: evoOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"greatball\",\n            onClick: evoTwo,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ultraball\",\n            onClick: evoThree\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-poke\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: evolution\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-data\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats\",\n          children: data === null || data === void 0 ? void 0 : data.data.map(info => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: info.data\n              }, info.data, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: info.name\n              }, info.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: info.types.map(i => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: i\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, info.types, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: info.description\n              }, info.description, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n_s(WaterPokemon, \"dhwKW/7PndaqJgaZ3v7UbP3BHA4=\");\n_c = WaterPokemon;\nexport default WaterPokemon;\nvar _c;\n$RefreshReg$(_c, \"WaterPokemon\");","map":{"version":3,"names":["React","useState","useEffect","axios","WaterPokemon","pokemon","data","setData","evolution","setEvolution","getData","response","get","splice","evoOne","evoTwo","evoThree","map","info","name","types","i","description"],"sources":["/Users/sirllokalot/Desktop/Homework and Classwork/Project-2/poke-dex/src/components/WaterPokemon.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\n\nconst WaterPokemon = () => {\n\n  let pokemon = 'Squirtle'\n  const [data, setData] = useState(null)\n  const [evolution, setEvolution] = useState('water-pokemon-img-1')\n   \n\n  const getData = async () => {\n    const response = await axios.get(`https://pokeapi.glitch.me/v1/pokemon/${pokemon}`)\n    setData(response)\n  }\n\n  useEffect(() => {\n\n    getData()\n  }, [])\n\n  const splice = () => {\n    data?.data.splice(1)\n  }\n\n  \n  const evoOne = () => {\n    pokemon = 'squirtle'\n    getData()\n    setEvolution('water-pokemon-img-1')\n   \n  }\n \n  const evoTwo = () => {\n    pokemon = 'wartortle'\n    getData()\n    setEvolution('water-pokemon-img-2')\n  \n  }\n  const evoThree = () => {\n    pokemon = 'blastoise'\n    getData()\n    setEvolution('water-pokemon-img-3')\n\n  }\n splice()\n\n return (\n  <div className='card-container2'>\n    <div className='card-holder'>\n      <div className='pokemon-image2'>\n        <div className='buttons'>\n          <div className='pokeball' onClick={evoOne}></div>\n          <div className='greatball' onClick={evoTwo}> </div>\n          <div className='ultraball' onClick={evoThree}></div>\n        </div>\n        <div className='img-poke'>\n            <div className={evolution}></div>\n          </div>\n      </div>\n      <div className='pokemon-data'>\n        <div className='stats'>\n          {data?.data.map(info => {\n            return (\n              <>\n                <p\n                  key={info.data}>\n                  {info.data}\n\n                </p>\n                <p key={info.name}>\n                    {info.name}\n                </p>\n                <p key={info.types}>\n                  {info.types.map(i => {\n                    return (\n                      <p key={i}>{i}</p>\n                    )\n                  })\n                  }\n                </p>\n                <p key={info.description}>\n                  {info.description}\n                </p>\n              </>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n\n  </div>\n)\n}\n\nexport default WaterPokemon;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}